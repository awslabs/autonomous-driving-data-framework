deploy:
  phases:
    install:
      commands:
        - npm install -g aws-cdk@2.63.0
        - pip install -r requirements.txt
        - apt-get install gettext-base
    build:
      commands:
        - LCC_CONTENT=`openssl base64 -A -in scripts/on-jupyter-server-start.sh`
        - export LCC_CONTENT=$LCC_CONTENT
        - aws sagemaker create-studio-lifecycle-config --studio-lifecycle-config-name $ADDF_PARAMETER_SERVER_LIFECYCLE_NAME --studio-lifecycle-config-content $LCC_CONTENT --studio-lifecycle-config-app-type JupyterServer || true
        - export LCC_ARN=$(aws sagemaker describe-studio-lifecycle-config --studio-lifecycle-config-name $ADDF_PARAMETER_SERVER_LIFECYCLE_NAME | jq -r ."StudioLifecycleConfigArn")
        - echo $LCC_ARN
        - ./check_lcc_state.sh
        - cdk deploy --require-approval never --progress events --app "python app.py" --outputs-file ./cdk-exports.json
        - cat cdk-exports.json
        - export DOMAIN_ID=$(cat cdk-exports.json | jq -r ."[].StudioDomainId")
        - echo $DOMAIN_ID
        - envsubst < "update-domain-input.template.json" > "update-domain-input.json"
        - aws sagemaker update-domain --cli-input-json file://update-domain-input.json
        - export ADDF_MODULE_METADATA=$(python -c "import json; file=open('cdk-exports.json'); print(json.load(file)['addf-${ADDF_DEPLOYMENT_NAME}-${ADDF_MODULE_NAME}'])")
destroy:
  phases:
    install:
      commands:
        - npm install -g aws-cdk@2.46.0
        - pip install -r requirements.txt
    build:
      commands:
        - cdk destroy --force --app "python app.py"
