// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";

export interface CfnNagSuppressRule {
  id: string;
  reason: string;
}

/**
 * Adds CFN NAG suppress rules to the CDK resource.
 * @param resource The CDK resource
 * @param rules The CFN NAG suppress rules
 */
export function addCfnSuppressRules(
  resource: cdk.Resource | cdk.CfnResource,
  rules: CfnNagSuppressRule[]
) {
  if (resource instanceof cdk.Resource) {
    resource = resource.node.defaultChild as cdk.CfnResource;
  }

  if (resource.cfnOptions.metadata?.cfn_nag?.rules_to_suppress) {
    resource.cfnOptions.metadata?.cfn_nag.rules_to_suppress.push(...rules);
  } else {
    resource.addMetadata("cfn_nag", {
      rules_to_suppress: rules,
    });
  }
}

export function addCfnSuppressToChildren(
  baseConstruct: constructs.Construct,
  rules: CfnNagSuppressRule[],
  cfnTypeFilter = "*"
) {
  const constructs = baseConstruct.node.findAll();
  for (const child of constructs) {
    if (child.node.defaultChild instanceof cdk.CfnResource) {
      const resource = child.node.defaultChild as cdk.CfnResource;
      const validType =
        cfnTypeFilter == "*" || resource.cfnResourceType == cfnTypeFilter;
      if (validType) {
        addCfnSuppressRules(resource, rules);
      }
    }
  }
}

export const Rules = {
  W2_PUBLIC_FACING_LB: {
    id: "W2",
    reason: "Public facing Application Load Balancer",
  },
  W5_CDK_AUTO_GEN_SGS: {
    id: "W5",
    reason: "CDK Auto Generated Security Groups",
  },
  W9_PUBLIC_FACING_LB: {
    id: "W9",
    reason: "Public facing Application Load Balancer",
  },
  W28_CDK_AUTO_GEN_PATTERNS: {
    id: "W28",
    reason: "CDK Auto Generated by ECS Pattern Construct",
  },
  W33_ALLOW_PUBLIC_SUBNET_MAP_PUBLIC_IP_TRUE: {
    id: "W33",
    reason: "Allow Public Subnets to have MapPublicIpOnLaunch set to true",
  },
  W40_CDK_AUTO_GEN_SGS: {
    id: "W40",
    reason: "CDK Auto Generated Security Groups",
  },
  W56_OUT_OF_SCOPE: {
    id: "W56",
    reason: `Configuring DNS, Hosted Zone and Certificate outside of scope of demo. See https://github.com/aws/aws-cdk/issues/7120 on enabling HTTPS`,
  },
  W58_VIA_MANAGED_POLICY: {
    id: "W58",
    reason:
      "Cloudwatch write access provided by managed policy service-role/AWSLambdaBasicExecutionRole",
  },
  W58_CDK_AUTO_GEN_CUSTOM_PROVIDER: {
    id: "W58",
    reason: "CDK Auto Generated Lambda for custom provider framework",
  },
  W84_CDK_AUTO_GEN_LG: {
    id: "W84",
    reason: "CDK Auto Generated Log Group",
  },
  W86_CDK_AUTO_GEN_PATTERNS: {
    id: "W86",
    reason: "CDK Auto Generated by ECS Pattern Construct",
  },
  W89_CDK_AUTO_GEN_LAMBDA_FUNC: {
    id: "W89",
    reason: "CDK Auto Generated Lambda Functions",
  },
  W92_CDK_AUTO_GEN_LAMBDA_FUNC: {
    id: "W92",
    reason: "CDK Auto Generated Lambda Functions",
  },
};
