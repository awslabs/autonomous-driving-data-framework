publishGenericEnvVariables: true
deploy:
  phases:
    build:
      commands:
      - export TIMESTAMP=$(date +%Y%m%d_%H%M%S)
      - export IMAGE_TAG="build-$TIMESTAMP" && echo IMAGE_TAG=$IMAGE_TAG
      - export ECR_REGISTRY_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - export REPOSITORY_URI=$ECR_REGISTRY_URL/$SEEDFARMER_PARAMETER_ECR_REPOSITORY_NAME && echo "REPOSITORY_URI=$REPOSITORY_URI"
      - export SAGEMAKER_BASE_IMAGE=$SEEDFARMER_PARAMETER_BASE_IMAGE_ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$SEEDFARMER_PARAMETER_BASE_IMAGE_NAME && echo SAGEMAKER_BASE_IMAGE=$SAGEMAKER_BASE_IMAGE
      # Log into SageMaker ECR Repo (https://github.com/aws/deep-learning-containers/blob/master/available_images.md)
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $SEEDFARMER_PARAMETER_BASE_IMAGE_ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "docker build -t $REPOSITORY_URI:latest . --build-arg BASE_IMAGE=$SAGEMAKER_BASE_IMAGE"
      - cd src && docker build -t $REPOSITORY_URI:latest . --build-arg BASE_IMAGE=$SAGEMAKER_BASE_IMAGE
      # - Building the Docker image(s)...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY_URL
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest && docker push $REPOSITORY_URI:$IMAGE_TAG
      - seedfarmer metadata add -k ImageUri -v $REPOSITORY_URI:latest
destroy:
  phases:
    build:
      commands:
      - echo "TODO Remove all images"
build_type: BUILD_GENERAL1_LARGE

