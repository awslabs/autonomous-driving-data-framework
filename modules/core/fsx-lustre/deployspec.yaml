deploy:
  phases:
    install:
      commands:
      - npm install -g aws-cdk@2.60.0
      - pip install -r requirements.txt
    build:
      commands:
      - cdk deploy --require-approval never --progress events --app "python app.py" --outputs-file ./cdk-exports.json
      - export ADDF_MODULE_METADATA=$(python -c "import json; file=open('cdk-exports.json'); print(json.load(file)['addf-${ADDF_DEPLOYMENT_NAME}-${ADDF_MODULE_NAME}']['metadata'])")
      - export FSX_LUSTRE_FILE_SYSTEM_ID=$(echo ${ADDF_MODULE_METADATA} | jq -r ".FSxLustreFileSystemId")
      - export FSX_LUSTRE_DNS_NAME=$(echo ${ADDF_MODULE_METADATA} | jq -r ".FSxLustreAttrDnsName")
      - export FSX_LUSTRE_MOUNT_NAME=$(echo ${ADDF_MODULE_METADATA} | jq -r ".FSxLustreMountName")
      - export FSX_LUSTRE_FS_DEPLOYMENT_TYPE=$(echo ${ADDF_MODULE_METADATA} | jq -r ".FSxLustreFileSystemDeploymentType")
      - |
        if [ "${FSX_LUSTRE_FS_DEPLOYMENT_TYPE}" = "PERSISTENT_2" ]; then
          aws fsx create-data-repository-association \
            --file-system-id ${FSX_LUSTRE_FILE_SYSTEM_ID} \
            --file-system-path /ns1/${ADDF_PARAMETER_DATA_BUCKET_NAME}/ \
            --data-repository-path s3://${ADDF_PARAMETER_DATA_BUCKET_NAME}/ \
            --batch-import-meta-data-on-create \
            --s3 '{"AutoImportPolicy":{"Events":["NEW","CHANGED","DELETED"]},"AutoExportPolicy":{"Events":["NEW","CHANGED","DELETED"]}}'
        fi

    post_build:
      commands:
      - echo "Deploy successful"

destroy:
  phases:
    install:
      commands:
      - npm install -g aws-cdk@2.60.0
      - pip install -r requirements.txt
    pre_build:
      commands:
      - echo "Prebuild stage"
    build:
      commands:
      - echo "DESTROY!"
      - cdk destroy --force --app "python app.py"
    post_build:
      commands:
      - echo "Destroy successful"
