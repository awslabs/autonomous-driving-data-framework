apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: x-dcv-agent
  namespace: dcv
spec:
  selector:
    matchLabels:
      env: dcv
  template:
    metadata:
      labels:
        env: dcv
    spec:
      restartPolicy: Always
      serviceAccountName: dcv-agent-src-account
      nodeSelector:
        usage: visualization
      containers:
        - name: x-dcv-container
          image: 663086445302.dkr.ecr.eu-central-1.amazonaws.com/addf-eks-viz-optionals-app-ecr:latest-x
          imagePullPolicy: "Always"
          command: [ "/usr/local/bin/run_script.sh" ]
          # args: [ "while true; do sleep 30; done;" ]
          env:
            - name: DCV_EKS_CONFIG_MAP_NAME
              value: "dcv-agent-config-map"
            - name: AWS_REGION
              value: $REGION
            - name: DCV_EKS_DISPLAY_PARAMETER_STORE
              value: $DISPLAY_PARAMETER_NAME
            # - name: XAUTHORITY
            #   value: /run/user/1000/dcv/default-session.xauth
          ports:
            - name: dcv-tcp
              protocol: TCP
              containerPort: 8443
            - name: dcv-udp
              protocol: UDP
              containerPort: 8443
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 16Gi
              nvidia.com/gpu: 1
            requests:
              cpu: "2"
              memory: 14Gi
          volumeMounts:
            - name: addf-dcv-socket-volume
              mountPath: /tmp/.X11-unix
              readOnly: false
            # - name: addf-dcv-auth-volume
            #   mountPath: /run/user/1000/dcv
            #   readOnly: false
      volumes:
        - name: addf-dcv-socket-volume
          hostPath:
            path: /var/addf/dcv-eks/sockets
        # - name: addf-dcv-auth-volume
        #   hostPath:
        #     path: /var/addf/dcv-eks/auth
