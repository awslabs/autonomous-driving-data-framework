apiVersion: apps/v1
kind: Deployment
metadata:
  name: dcv-agent
  namespace: $NAMESPACE
spec:
  replicas: 2
  selector:
    matchLabels:
      env: dcv
  template:
    metadata:
      labels:
        env: dcv
    spec:
      restartPolicy: Always
      serviceAccountName: dcv-agent-src-account
      nodeSelector:
        usage: visualization
      containers:
        - name: nice-dcv-container
          image: $IMAGE
          command: [ "/usr/local/bin/run_script.sh" ]
          imagePullPolicy: "Always"
          env:
            - name: DCV_EKS_CONFIG_MAP_NAME
              value: "dcv-agent-config-map"
            - name: AWS_REGION
              value: $REGION
            - name: DCV_EKS_DISPLAY_PARAMETER_STORE
              value: $DISPLAY_PARAMETER_NAME
            - name: XAUTHORITY
              value: /run/user/1000/dcv/default-session.xauth
          ports:
            - name: dcv-tcp
              protocol: TCP
              containerPort: 8443
            - name: dcv-udp
              protocol: UDP
              containerPort: 8443
          securityContext:
            privileged: true
          volumeMounts:
            - name: addf-dcv-socket-volume
              mountPath: /tmp/.X11-unix
              readOnly: false
            - name: addf-dcv-auth-volume
              mountPath: /run/user/1000/dcv
              readOnly: false
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/check_healthy.sh
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 90
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/check_healthy.sh
            initialDelaySeconds: 120
            periodSeconds: 10
      volumes:
        - name: addf-dcv-socket-volume
          hostPath:
            path: $SOCKET_PATH
        - name: addf-dcv-auth-volume
          hostPath:
            path: /var/addf/dcv-eks/auth
